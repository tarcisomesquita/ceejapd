https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Array


{
  let ti = Math.floor(Date.now()/1000);
  t3.forEach(
    function (item, indice, array) {
      console.log(item);
    }
  );
  let tf = Math.floor(Date.now()/1000);
  console.log(tf - ti)
}


https://cloud.google.com/shell/docs/quickstart

https://cloud.google.com/build/docs/how-to

  var ss = SpreadsheetApp.getActiveSpreadsheet();
  var pending = ss.getSheetByName('Pending requests');
  var completed = ss.getSheetByName('Completed requests');
  var rows = pending.getDataRange().getValues();
  rows.forEach(function(row, index) {
    var status = row[0];
    if (status === 'Completed' || status == 'Cancelled') {
      pending.deleteRow(index + 1);
      completed.appendRow(row);
      sendEquipmentRequestCompletedEmail_({
        'Employee name': row[3],
        'Desk location': row[4],
        'email': row[6],
      });
    }

function sendEquipmentRequestCompletedEmail_(request) {
  var template = HtmlService.createTemplateFromFile('request-complete.html');
  template.request = request;
  var msg = template.evaluate();
  MailApp.sendEmail({
    to: request.email,
    subject: 'Equipment request completed',
    htmlBody: msg.getContent(),
  });
}

<!DOCTYPE html>
<html>
  <body>
    <p>
    An equipment request has been completed.
    </p>
    
    <p>
    Employee name: <?= request['Employee name'] ?><br/>
    Desk location name: <?= request['Desk location'] ?><br/>
    </p>
  </body>
</html>


const myfunction = async () => {}

//   for...in doesn't expect an iterable.
for (var item of myArray) {
  // Logs [0]=a, [1]=b, [2]=c
  Logger.log(item);
}


<!DOCTYPE HTML>
<meta charset="UTF-8">
<title>Stack Trace Example</title>
<body>
<script>
function trace() {
  try {
    throw new Error('myError');
  }
  catch(e) {
    alert(e.stack);
  }
}
function b() {
  trace();
}
function a() {
  b(3, 4, '\n\n', undefined, {});
}
a('first call, firstarg');
</script>


// V8 runtime
var myGlobal = 5;

function myFunction() {

  // Logs an array that includes the names
  // of Apps Script services
  // (CalendarApp, GmailApp, etc.) in
  // addition to myFunction and myGlobal.
  console.log(Object.keys(this));

  // Logs an array that includes the same
  // values as above, and also includes
  // ECMAScript built-ins like Math, Date,
  // and Object.
  console.log(
    Object.getOwnPropertyNames(this));
}


//https://developers.google.com/apps-script/guides/web
//https://stackoverflow.com/questions/tagged/google-apps-script
//https://stackoverflow.com/questions/56663168/how-to-speed-up-the-search-data-in-sheet

/*
To speed up a script, read all data into an array with one command, perform any operations on the data in the array, and write the data out with one command.

https://developers.google.com/apps-script/reference/cache/cache
  function getRssFeed() {
    var cache = CacheService.getScriptCache();
    var cached = cache.get("rss-feed-contents");
    if (cached != null) {
      return cached;
    }
    // This fetch takes 20 seconds:
    var result = UrlFetchApp.fetch("http://example.com/my-slow-rss-feed.xml");
    var contents = result.getContentText();
    cache.put("rss-feed-contents", contents, 1500); // cache for 25 minutes
    return contents;
  }


var arr = [5, 6, 13, 0, 1, 18, 23];
var even = arr.filter(v => v % 2 == 0);
// [6, 0, 18]

var double = arr.map(v => v * 2);
// [10, 12, 26, 0, 2, 36, 46]

const typedArray = new Uint8Array([1, 2, 3, 4]);
const normalArray = Array.from(typedArray);






var max = 1000;

// Conventional method
for (var i = 0; i < max; i++) {
  // do something
}

// Proposed method
var r = Array.apply(null, new Array(max)).map(function(_, i) {
  // do something
});

// map, filter
var result = array.map(function(e) {return e.filter(function(f) {return f % 5 == 0})}); // 2 Dimensions




var ss = SpreadsheetApp.getActiveSpreadsheet();
var sheet = ss.getSheets()[0];

// The size of the two-dimensional array must match the size of the range.
var values = [
[ "2.000", "1,000,000", "$2.99" ]
];

var range = sheet.getRange("B2:D2");
range.setValues(values);
*/

//https://developers.google.com/identity/sign-in/web/sign-in
//https://console.cloud.google.com/apis/credentials

//https://myaccount.google.com/permissions
//https://codebeautify.org/jsviewer

